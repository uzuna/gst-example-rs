name: Build and test
on:
  push:
    branches:
      - master
    paths:
      - gst-example
      - meta
      - plugin
  pull_request:
    types: ["opened", "synchronize"]
jobs:
  store:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
          version: 1.0
      - run: rustup toolchain install stable --profile minimal
      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      - run: mkdir artifacts
      - run: echo "dummy" > artifacts/dummy.txt
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: artifacts
          retention-days: 1
  restore:
    needs: store
    runs-on: ubuntu-latest
    container:
      image: uzuna/go-bin-deb:latest
    defaults:
      run:
        shell: sh
    steps:
      - uses: actions/checkout@v3
      - name: Cache Primes
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      - run: mkdir artifacts
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: artifacts
      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}
      - run: ls -la
      - name: get dummy.txt
        run: cat artifacts/dummy.txt

  # build-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       env:
  #         cache-name: cache-cargo
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #           target
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-cargo-
  #     - uses: Swatinem/rust-cache@v2
  #       with:
  #         key: "build"
  #     - name: build
  #       run: make build
  #     - name: check format
  #       run: cargo fmt --all -- --check
  #     - name: check clippy
  #       run: cargo clippy --all-targets --all-features -- -D warnings
  #     - name: test
  #       run: cargo test --all -- --nocapture
  #     - name: build release
  #       run: make -C plugin build TARGET=release
  # deb:
  #   needs: build-test
  #   runs-on: ubuntu-latest
  #   container:
  #     image: uzuna/go-bin-deb:latest
  #   defaults:
  #     run:
  #       shell: sh
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       env:
  #         cache-name: cache-cargo
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #           target
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-cargo-
  #     - run: ls -la
  #     - name: deb
  #       run: cd plugin && make deb
  #     - name: Archive artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: packages
  #         path: deb
  #         retention-days: 5
